apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
android {
    compileSdkVersion 25
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.wenba.aixuestore"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode buildVersionCode()
        versionName "1.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        def Properties keyProps = new Properties()
        keyProps["store"] = 'wenbaedu.keystore'
        keyProps["alias"] = 'android'
        keyProps["storePass"] = 'wenba2012'
        keyProps["pass"] = 'wenba2012'

        debug {
            storeFile file(keyProps["store"])
            keyAlias keyProps["alias"]
            storePassword keyProps["storePass"]
            keyPassword keyProps["pass"]
        }
        release {
            storeFile file(keyProps["store"])
            keyAlias keyProps["alias"]
            storePassword keyProps["storePass"]
            keyPassword keyProps["pass"]
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            //注意要添加签名
            signingConfig signingConfigs.release
            //自定义apk名字
            android.applicationVariants.all  { variant ->
                variant.outputs.all {
                    if (variant.buildType.name == 'release') {
                        outputFileName  = "aixuestore-release.apk"
                    } else if (variant.buildType.name == 'debug') {
                        outputFileName  = "aixuestore-debug.apk".toLowerCase()
                    }
                }

            }
        }
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile "io.reactivex.rxjava2:rxjava:$rxjavaVersion"
    compile "io.reactivex.rxjava2:rxandroid:$rxandroidVersion"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile "org.jetbrains.anko:anko:$anko_version"
    compile 'com.yqritc:recyclerview-flexibledivider:1.4.0'
    compile 'com.yqritc:recyclerview-flexibledivider:1.4.0'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.squareup.okhttp3:okhttp:3.9.0'
    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.android.support:cardview-v7:25.3.1'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'cn.finalteam.loadingviewfinal:loading-more-view:1.0.1'
    compile 'cn.finalteam.loadingviewfinal:swipe-refresh-layout:1.0.1'
    compile 'com.github.bumptech.glide:glide:3.+'
    compile 'com.liulishuo.filedownloader:library:1.6.8'
    testCompile 'junit:junit:4.12'
}


def releaseTime() {
    return new Date().format("MM-dd-HH-mm", TimeZone.getTimeZone("GMT+08:00"))
}

def buildVersionCode() {
    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        //载入version.properties
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        //从version.properties根据关键字"VERSION_CODE"取Integer
        def verCode = versionProps['VERSION_CODE'].toInteger()
        //判断build模式，如果是发布模式（':app:assembleRelease'）则自增版本号，并且写回version.properties文件中
        def runTasks = gradle.startParameter.taskNames
        if (':app:assembleRelease' in runTasks) {
            versionProps['VERSION_CODE'] = (++verCode).toString()
            versionProps.store(versionPropsFile.newWriter(), null)
            System.out.println("version code ->" + versionProps['VERSION_CODE'].toInteger())
            return versionProps['VERSION_CODE'].toInteger()
        }

    }
    return 1
}
